- Remove: ExitThread and ExitProcess signatures (thanks Accuvant).
- Tweak: Improve compilation so that helper code does not depend on
  automatically generated code, therefore improving compilation time when
  working on signatures.
- Remove: Removed minimum OS logic - just hook everything that can be hooked.
- New: Various function signatures that eliminate unnecessary log entries.
- Tweak: Change from iterating through unicode buffers to basic memory
  management where each allocated buffer has to be freed.
- New: Start on unittests of monitor functionality.
- Tweak: Provide our own implementation of more general purpose functionality.
- Feature: Allow the current working directory to be set when creating a new
  process.
- New: Introduce is32bit.exe to inject the 32-bit or 64-bit monitor based on
  the original executable of the process to be injected.
- Feature: Fixup compiler warnings, introduce stacktrace() in 64-bit mode, and
  fixup 64-bit calling convention in order to allow 64-bit analysis.
- Feature: Create process from another injected process - select by process
  name.
- Rewrite: Completely rewritten inject.c (was dllinject.c) to be used for
  injection by Cuckoo. Supports process creation from within another process
  and various other nifty tricks.
- New: Logic for ignoring function calls referencing ignored object handles.
- Tweak: Place hook after the "mov eax, imm32" instruction for hooked system
  call wrappers (i.e., functions starting with Nt).
- Tweak: Move prelog support logic from TLS entries to the relevant functions.
- Tweak: Add verbose error reporting where useful to possibly avoid bricking
  the monitor in the near future.
- Tweak: Modify almost all native API usage to go through our custom system
  call wrappers and memory allocator.
- New: Introduce various native system call wrappers for directly executing
  system calls. Implement basic memory allocator based on it.
- Tweak: Properly fetch and restore last error codes by directly modifying
  the TEB.
- Huge tweak: Completely get rid of the TLS-based hook information state. The
  relevant hook information (i.e., are we inside a hook?) is now obtained
  through stacktraces.
- Tweak: A couple more ignored special filepaths.
- Tweak: Properly normalize registry keys.
- Tweak: Move actual exception logging outside of the exception handler.
- Tweak: Log bson data to a file if no socket configuration was specified.
- Tweak: Simplified resolving of absolute paths (thanks Accuvant).
- Bugfix: Resolved issues in UTF-8 encoding (thanks Accuvant).
- New: Various signatures, parameters, flags, and "interesting" blocks.
- Bugfix: Do not fetch configuration from $TEMP as it might vary between
  processes (thanks Accuvant).
- Tweak: Always enable Capstone string support.
- Bugfix: APC Injection requires the thread identifier (thanks Accuvant).
- Tweak: Include "interesting" blocks into many signatures.
- Feature: Calculate a hash for each call, allow hashes to be ignored.
- Tweak: Move flag representation logic to the Cuckoo side.
- Tweak: "Instant" logging for functions that terminate.
- Tweak: Improved logging of values for registry APIs.
- Bugfix: Incorrect prelog output when the first API on a new thread uses it.
- Feature: Resolve magic values to flags.
- Add: A few Crypto and OLE signatures.
- Tweak: Remove dead unhook detection regions when unloading a DLL.
- Bugfix: Unhook detection was not working due to a copy 'n paste fail.
- Tweak: Minimum OS version to ignore unresolved symbols when hooking.
- Feature: Added Replace section for signatures.
- Tweak: Resolve monitors' symbols while destroying its PE header.
- Bugfix: Announce new threads to Cuckoo.
- Bugfix: Registry key resolving null-ptr issue, un-crashing Python.
- Bugfix: Only hook functions once (thanks Thorsten Sick).
- Bugfix: Stabilize null pointer filepaths.
- Tweak: Update and improve integration of ignored filepaths.
- Bugfix: Correctly replace \Device\HarddiskVolumeX aliases (thanks Accuvant).
- Bugfix: Don't enter infinite recursion when entering a new thread (thanks
  Accuvant).
- Bugfix: Improved various native registry hooks, un-crashing calc.exe (thanks
  Thorsten Sick).
- Bugfix: limit to a maximum of 1024 exceptions avoiding huge logs. Logs this
  behavior (excessive exception count) as anomaly.
- Tweak: use a ringbuffer for unicode filepaths rather than allocating many
  dozens or even hundreds of kilobytes on the stack.
- Bugfix: long file path resolving (after many attempts).
- Bugfix: registry key path resolving (after many attempts).
- Bugfix: execution never finishing due to unhook detection threads.
- Dump instruction at exception address in debug mode.
- Exception handler; log exceptions with stacktraces.
- Introduce debug mode; attach a stacktrace to every logged API.
- Resolve registry key paths on-the-fly.
- "Ensure" blocks; avoid null pointer arguments in called APIs.
- Documentation.
- Special hooks; hook handlers for a specific API that are always invoked.
- Start on 64-bit support.
- Base monitor including hooking, logging, unhook detection.
