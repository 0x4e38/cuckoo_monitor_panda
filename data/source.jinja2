{{hook.signature.return_value}} {{hook.signature.calling_convention}} New_{{hook.apiname}}(
{%- for param in hook.parameters: %}
    {{param.argtype}}
    {%- if not param.argtype.endswith('*') %} {% endif -%}
    {{param.argname}}
    {%- if not loop.last %},{% endif -%}
{%- endfor %}
) {
    {%- if hook.pre: %}
    {%- for line in hook.pre: %}
    {{line}}
    {%- endfor %}
    {%- endif %}

    {%- if hook.prelog: %}
    log_api_pre("{{ hook.prelog|join(attribute='argtype') }}"
    {%- for log in hook.prelog: -%}
        ,
        {{log.argvalue}}
    {%- endfor %}
    );
    {%- endif %}

    {{hook.signature.return_value}} ret = Old_{{hook.apiname}}(
    {%- for param in hook.parameters: %}
        {{param.argname}}
        {%- if not loop.last %},{% endif -%}
    {%- endfor %}
    );

    log_api("
    {%- for param in hook.parameters: -%}
        {%- if param.log == True: -%}
            {{types[param.argtype]}}
        {%- endif -%}
    {%- endfor -%}
    {%- for log in hook.logging: -%}
        {{log.argtype}}
    {%- endfor -%}
    "
    {%- for param in hook.parameters: -%}
        {% if param.log == True: -%}
        ,
        {{param.argname}}
        {%- endif %}
    {%- endfor %}
    {%- for log in hook.logging: -%}
        ,
        {{log.argvalue}}
    {%- endfor %}
    );

    {%- if hook.post: %}
    {% for line in hook.post: %}
    {{line}}
    {%- endfor %}
    {% endif %}
    return ret;
}
